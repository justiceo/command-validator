NAME
       node -- server-side JavaScript runtime

SYNOPSIS
       node [options] [v8-options] [-e string | script.js | -] [--] [arguments ...]
       node inspect [-e string | script.js | - | <host>:<port>] ...
       node [--v8-options]

DESCRIPTION
       Node.js is a set of libraries for JavaScript which allows it to be used outside of the browser. It is primarily focused on creating simple, easy-to-build network clients and servers.

OPTIONS
       -                       				Alias for stdin, analogous to the use of - in other command-line utilities. The executed script is read from stdin, and remaining arguments are passed to the script.
       --                      				Indicate the end of command-line options. Pass the rest of the arguments to the script.
       --abort-on-uncaught-exception			Aborting instead of exiting causes a core file to be generated for analysis.
       --completion-bash       				Print source-able bash completion script for Node.js.
       -C, --conditions string  			Use custom conditional exports conditions.
       --cpu-prof              				Start the V8 CPU profiler on startup, and write the CPU profile to disk before exit.
       --cpu-prof-dir          				The directory where the CPU profiles generated by --cpu-prof will be placed. The default value is controlled by the --diagnostic-dir.
       --cpu-prof-interval     				The sampling interval in microseconds for the CPU profiles generated by --cpu-prof. The default is 1000.
       --cpu-prof-name         				File name of the V8 CPU profile generated with --cpu-prof.
       --diagnostic-dir        				Set the directory for all diagnostic output files.
       --disable-proto=mode    				Disable the `Object.prototype.__proto__` property. If mode is `delete`, the property will be removed entirely.
       --disallow-code-generation-from-strings		Make built-in language features like `eval` and `new Function` that generate code from strings throw an exception instead.
       --enable-fips           				Enable FIPS-compliant crypto at startup. Requires Node.js to be built with ./configure --openssl-fips.
       --enable-source-maps    				Enable Source Map V3 support for stack traces.
       --experimental-default-type=type			Interpret as either ES modules or CommonJS modules input via --eval or STDIN, when --input-type is unspecified.
       --experimental-global-customevent		Expose the CustomEvent on the global scope.
       --experimental-global-webcrypto			Expose the Web Crypto API on the global scope.
       --experimental-import-meta-resolve		Enable experimental ES modules support for import.meta.resolve().
       --experimental-loader=module			Specify the module to use as a custom module loader.
       --experimental-network-imports			Enable experimental support for loading modules using `import` over `https:`.
       --experimental-policy     			Use the specified file as a security policy.
       --experimental-shadow-realm			Use this flag to enable ShadowRealm support.
       --experimental-test-coverage			Enable code coverage in the test runner.
       --no-experimental-fetch   			Disable experimental support for the Fetch API.
       --no-experimental-repl-await			Disable top-level await keyword support in REPL.
       --experimental-specifier-resolution		Select extension resolution algorithm for ES Modules; either 'explicit' (default) or 'node'.
       --experimental-vm-modules 			Enable experimental ES module support in VM module.
       --experimental-wasi-unstable-preview1		Enable experimental WebAssembly System Interface support. This flag is no longer required as WASI is enabled by default.
       --experimental-wasm-modules			Enable experimental WebAssembly module support.
       --force-context-aware    			Disable loading native addons that are not context-aware.
       --force-fips            				Force FIPS-compliant crypto on startup (Cannot be disabled from script code). Same requirements as --enable-fips.
       --frozen-intrinsics      			Enable experimental frozen intrinsics support.
       --heapsnapshot-near-heap-limit=max_count		Generate heap snapshot when the V8 heap usage is approaching the heap limit. No more than the specified number of snapshots will be generated.
       --heapsnapshot-signal=signal			Start the V8 heap profiler on startup, and write the heap profile to disk before exit.
       --heap-prof-dir          			The directory where the heap profiles generated by --heap-prof will be placed. The default value is controlled by the --diagnostic-dir.
       --heap-prof-interval     			The average sampling interval in bytes for the heap profiles generated by --heap-prof. The default is 512 * 1024.
       --heap-prof-name         			File name of the V8 heap profile generated with --heap-prof.
       --icu-data-dir=file      			Specify ICU data load path. Overrides NODE_ICU_DATA.
       --input-type=type        			Set the module resolution type for input via --eval, --print or STDIN.
       --inspect-brk=[host:]port			Activate inspector on host:port and break at start of user script.
       --inspect-port=[host:]port			Set the host:port to be used when the inspector is activated.
       --inspect-publish-uid=stderr,http		Specify how the inspector WebSocket URL is exposed. Valid values are stderr and http. Default is stderr,http.
       --inspect=[host:]port    			Activate inspector on host:port. Default is 127.0.0.1:9229.
       --insecure-http-parser    			Use an insecure HTTP parser that accepts invalid HTTP headers. Avoid using this option.
       --jitless                			Disable runtime allocation of executable memory. This may reduce attack surface but can impact performance.
       --max-http-header-size=size			Specify the maximum size of HTTP headers in bytes. Defaults to 16 KiB.
       --napi-modules           			This option is a no-op. It is kept for compatibility.
       --no-deprecation          			Silence deprecation warnings.
       --no-extra-info-on-fatal-exception		Hide extra information on fatal exception that causes exit.
       --no-force-async-hooks-checks			Disable runtime checks for `async_hooks`.
       --no-addons              			Disable the `node-addons` exports condition as well as disable loading native addons.
       --no-global-search-paths  			Do not search modules from global paths.
       --no-warnings            			Silence all process warnings (including deprecations).
       --node-memory-debug       			Enable extra debug checks for memory leaks in Node.js internals.
       --openssl-config=file     			Load an OpenSSL configuration file on startup.
       --pending-deprecation     			Emit pending deprecation warnings.
       --policy-integrity=sri    			Instructs Node.js to error if the policy does not have the specified integrity.
       --preserve-symlinks      			Instructs the module loader to preserve symbolic links when resolving modules.
       --preserve-symlinks-main  			Instructs the module loader to preserve symbolic links for the main module.
       --prof                   			Generate V8 profiler output.
       --prof-process           			Process V8 profiler output generated using the V8 option --prof.
       --redirect-warnings=file  			Write process warnings to the given file instead of printing to stderr.
       --report-compact         			Write diagnostic reports in a compact format, single-line JSON.
       --report-dir             			Location for the diagnostic report. If not absolute, defaults to --diagnostic-dir.
       --report-filename        			Name of the file to which the diagnostic report will be written.
       --report-on-fatalerror   			Enables the diagnostic report on fatal errors that lead to application termination.
       --report-on-signal       			Enables diagnostic report upon receiving a specified signal.
       --report-signal          			Sets the signal for diagnostic report generation.
       --report-uncaught-exception			Enables diagnostic report on un-caught exceptions.
       --secure-heap=n         				Specify the size of the OpenSSL secure heap.
       --secure-heap-min=n     				Specify the minimum allocation from the OpenSSL secure heap.
       --test                   			Starts the Node.js command line test runner.
       --test-concurrency       			The maximum number of test files that the test runner CLI will execute concurrently.
       --test-name-pattern      			A regex that configures the test runner to execute tests whose names match.
       --test-reporter          			A test reporter to use when running tests.
       --test-reporter-destination			The destination for the corresponding test reporter.
       --test-only             				Configures the test runner to execute only top level tests that have the `only` option set.
       --test-shard            				Test suite shard to execute in a format of <index>/<total>.
       --throw-deprecation      			Throw errors for deprecations.
       --title=title           				Specify process.title on startup.
       --tls-cipher-list=list   			Specify an alternative default TLS cipher list.
       --tls-keylog=file       				Log TLS key material to a file for use in decrypting TLS traffic.
       --tls-max-v1.2         				Set default maxVersion to 'TLSv1.2'.
       --tls-max-v1.3         				Set default maxVersion to 'TLSv1.3'.
       --tls-min-v1.0         				Set default minVersion to 'TLSv1'.
       --tls-min-v1.1         				Set default minVersion to 'TLSv1.1'.
       --tls-min-v1.2         				Set default minVersion to 'TLSv1.2'.
       --tls-min-v1.3         				Set default minVersion to 'TLSv1.3'.
       --trace-atomics-wait    				Print short summaries of calls to Atomics.wait().
       --trace-deprecation      			Print stack traces for deprecations.
       --trace-exit            				Print a trace of the exit process.
       --trace-sync-io         				Print a trace of synchronous I/O.
       --unhandled-rejections=mode			Configure the unhandled rejection behavior. `strict`, `none`, or `throw`.
       --unhandled-rejections=none			Do not treat unhandled promise rejections as an error. The default is to log them.
       --unhandled-rejections=throw			Treat unhandled promise rejections as an error that causes process exit.
       --v8-options            				Print V8 command line options and exit.
       --version               				Print the Node.js version and exit.

EXAMPLES
       node -e "console.log('Hello World')"
       node script.js arg1 arg2

AUTHORS
       Written and maintained by 1000+ contributors:
       https://github.com/nodejs/node/blob/HEAD/AUTHORS

REPORT BUGS
       https://github.com/nodejs/node/issues

COPYRIGHT
       Copyright Node.js contributors.	Node.js	is available under the MIT li-
       cense.

SEE ALSO
       Website:	https://nodejs.org/

       Documentation: https://nodejs.org/api/

       GitHub repository and issue tracker: https://github.com/nodejs/node

       IRC (general questions):	libera.chat #node.js (unofficial)


